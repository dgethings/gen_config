groups {
	re0 {
		system {
			host-name $hostname$-re0;
		}
	}
	re1 {
		system {
			host-name $hostname$-re1;
		}
	}
}
system {
	syslog {
		source-address $loopback_address$;
	}
	ntp {
		source-address $loopback_address$;
	}
}
apply-groups [ re0 re1 ];
chassis {
	fpc $slot$ {
		pic 0 {
			max-queues-per-interface 8;
		}
		pic 1 {
			max-queues-per-interface 8;
		}
		pic 2 {
			max-queues-per-interface 8;
		}
		pic 3 {
			max-queues-per-interface 8;
		}
	}
}
interfaces {
	lo0 {
		unit 0 {
			family inet {
				address $loopback_address$/32 {
					preferred;
					primary;
				}
			}
		}
		unit 200 {
			family inet {
				address $loopback_address_200$/32;
			}
		}
	}
}
protocols {
	bgp {
		group RR-group {
			local-address $loopback_address$;
			neighbor $rr_primary_address$ {
				authentication-key "$password$";
			}
			neighbor $rr_secondary_address$ {
				authentication-key "$password$";
			}
		}
	}
	ospf {
		area $leaf area ID$ {
			interface lo0.0 {
				passive;
			}
		}
	}
}
routing-options {
	static {
		route $red_instance_IP_address$/32 next-table red.inet.0;
		route $blue_instance_IP_address$/32 next-table blue.inet.0;
	}
	router-id $loopback_address$;
}
policy-options {
	policy-statement daf-red-blue {
		term 10 {
			from {
				route-filter $red_instance_IP_address$/32 exact;
			}
			then accept;
		}
		term 20 {
			from {
				route-filter $blue_instance_IP_address$/32 exact;
			}
			then accept;
		}
	}
	policy-statement SET-NEXT-HOP {
		term term-1 {
			then next-hop $red_instance_IP_address$;
		}
		term term-2 {
			then next-hop $blue_instance_IP_address$;
		}
	}
	policy-statement RED-BLUE-ACL1 {
		term term-1 {
			from {
				route-filter $loopback_address$/32 exact;
				route-filter $red_instance_IP_address$/32 exact;
				route-filter $blue_instance_IP_address$/32 exact;
			}
			then accept;
		}
	}
	community pop-saa-rt members target:12641:$SAA-rt-PoP$;
	community regional-saa-spoke-rt members target:12641:$D_REGIONAL_RT$;
}
routing-instances {
	red {
		routing-options {
			static {
				route $red_instance_IP_address$/32 receive;
			}
			router-id $red_instance_IP_address$;
		}
	}
	blue {
		routing-options {
			static {
				route $blue_instance_IP_address$/32 receive;
			}
			router-id $blue_instance_IP_address$;
		}
	}
}
