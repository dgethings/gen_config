interfaces {
    $physical_interface {
        unit $logical_interface {
            /* vrf $vrfname */
            description "$unit_interface_description";
            vlan-id $vlan_id;
            family inet {
                mtu 1500;
                address $ipaddress/30;
                filter {
                    input-list [ $control_filter $vrf_aggregate_filter $vrf_cos_filter ];
                    output-list [ finex-BFD-BGP-PIM-out $AF2_SAN_filter AF2-rtq-out-default $AF1_SAN_filter $Fix_filter AF1-out-default ];
                }
            }
        }
    }
    lo0 {
        unit $vrf_lo0_logical_int {
            /* vrf $vrfname */
            description "$vrf_lo0_int_descr";
            family inet {
                filter {
                    input protect-RE-VRF;
                }
                address $vrf_lo0_ip_addr/32;
            }
        }
    }
}
policy-options {
    prefix-list allowed-srcs-$subint {
        $prefix1/$prefix1_mask;
        $prefixn/$prefixn_mask;
    }
    policy-statement fv-import-$vrfname {
        term import-TR-hub-RTs {
            from {
                protocol bgp;
                community RT-community-12641:9685;
            }
            then accept;
        }
    }
    policy-statement fv-export-$vrfname {
        term PE-Lo99xx {
            from {
                protocol direct;
                prefix-list-filter temp-PE-loops orlonger;
            }
            then {
                community add FV-COMMUNITY-SET;
                community add BT-MPLS-PE-VRF-loopback-SET;
                community add $vrfname-TR-spoke-RTs;
                accept;
            }
        }
        term permit-static-fv-loop10s {
            from {
                protocol static;
                prefix-list-filter fv-loop10s orlonger;
            }
            then {
                community add $vrfname-TR-spoke-RTs;
                accept;
            }
        }
        term permit-no-converge {
            from {
                protocol static;
                tag 6137;
            }
            then {
                community add FV-COMMUNITY-SET;
                community add FE-TR-CLIENT-COM;
                community add $vrfname-TR-spoke-RTs;
                accept;
            }
        }
        term export-TR-spoke-RTs {
            from {
                protocol bgp;
                community FE-TR-CLIENT-COM;
            }
            then {
                community add $vrfname-TR-spoke-RTs;
                accept;
            }
        }
    }
    community $vrfname-TR-spoke-RTs members target:12641:9686;
}
firewall {
    policer $agg_policer_name {
        if-exceeding {
            bandwidth-limit $vrf_agg_police_bw;
            burst-size-limit $vrf_agg_police_burst;
        }
        then {
            discard;
        }
    }
    policer AF1_$subint {
        if-exceeding {
            bandwidth-limit $vrf_af1_bw;
            burst-size-limit $vrf_af1_burst;
        }
        then {
            loss-priority low;
            forwarding-class FC-Q6;
        }
    }
    family inet {
        filter $agg_filter_name {
            interface-specific;
            term sp-ping {                   
                from {
                    source-prefix-list {
                        sp-ping-$subint;
                    }
                    protocol icmp;
                    icmp-type-except echo-reply;
                }                                   
                then {
                    count sp-ping-discard;
                    discard;
                }
            }
            term allowed-srcs-except {
                from {
                    source-prefix-list {
                        allowed-srcs-$subint except;
                    }
                }
                then {
                    count discard-traffic;
                    discard;
                }
            }
            term Agg-policer {
                then {
                    policer $agg_policer_name;
                    count all-permitted;
                    next term;
                }
            }
        }
        filter finex-cos-$subint {
            term AF1_in {
                from {
                    dscp af11;
                }
                then {
                    policer AF1_$subint;
                    count AF_in;
                    loss-priority low;
                    forwarding-class FC-Q6;
                    accept;
                }
            }
            term AF1_out { 
                from {
                    dscp [ af12 af13 ];
                }
                then {
                    count AF1_out;
                    loss-priority high;
                    forwarding-class FC-Q6;
                    accept;
                }   
            }
            term default {
                then {
                    count BE;
                    loss-priority low;
                    forwarding-class FC-Q4;
                    accept;
                }
            }
        }
        filter $AF2_SAN_filter_name {
            apply-groups $SAN_name;

            term $SAN_name-1-all {
                then count $SAN_name-all;
            }
            term $SAN_name-1-pol {

                then three-color-policer {
                    single-rate $SAN_policer_name;
                }
            }
                then {
                    policer $SAN_policer_name;
                    loss-priority low;
                }
            }
            term $SAN_name-1-ic {
                then count $SAN_name-ic;
            }
            term $SAN_name-1-oc {
                then count $SAN_name-oc;
            }
		}
        filter $AF1_SAN_filter_name {
            apply-groups $SAN_name;

            term $SAN_name-1-all {
                then count $SAN_name-all;
            }
            term $SAN_name-1-pol {

                then three-color-policer {
                    single-rate $SAN_policer_name;
                }
            }

                then {
                    policer $SAN_policer_name;
                    loss-priority low;
                }
            }

            term $SAN_name-1-ic {
                then count $SAN_name-ic;
            }
            term $SAN_name-1-oc {
                then count $SAN_name-oc;
            }
		}
    }
}
routing-instances {
    $vrfname {
        instance-type vrf;
        route-distinguisher $ASN:$RD_number;
        interface $physical_interface.$logical_interface;
        interface lo0.$grey_vrf_lo0_logical_int;
        vrf-import $import_policy_statement;
        vrf-export $export_policy_statement;
        vrf-table-label;
        routing-options {
            static {
                route $ce_loopback10/32 {
                    next-hop $ce-wan-ip;
                    bfd-liveness-detection {
                        no-adaptation;
                        minimum-interval 999;
                        multiplier 3;
                    }
                    community [ 12641:65050 12641:6125 ];
                }
                route $ce-wan-ip/32 {
                    next-hop $ce-wan-ip;
                    bfd-liveness-detection {
                        no-adaptation;
                        minimum-interval $bfd_minimum_interval;
                        multiplier $bfd_multiplier;
                    }
                    no-readvertise;
                }
            }
            auto-export;
            multipath;
        }
    }
    forwarding-options {
        family inet {
            filter {
                output $mcast_SAN_filter;
            }
        }
    }
}
