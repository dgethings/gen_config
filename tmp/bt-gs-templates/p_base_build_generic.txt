interfaces {
	lo0 {
		unit 0 {
			family inet {
				address 127.0.0.1/32;
			}
		}
	}
}
chassis {
    redundancy {
        failover {
            on-disk-failure;
            on-loss-of-keepalives;
        }
        graceful-switchover;
    }
}
system {
	ports {
        console {
            log-out-on-disconnect;
            type vt100;
        }
        auxiliary insecure;
    }
    no-redirects;
    services {
        telnet {
            connection-limit 16;
            rate-limit 16;
        }
    }
    root-authentication {
        encrypted-password "$1$maPAXuaQ$PVJqIaAMoiX18IHpcXY4Q0"; ## SECRET-DATA
    }
	authentication-order tacplus;
	login {
		message "\nBritish Telecommunications plc\n\nWARNING: You have accessed a network device operated by BT. You are required\nto have a personal authorisation from the system administrator before you use\nthis computer and you are strictly limited to the use set out in that written\nauthorisation. Unauthorised access to or misuse of this system is prohibited\nand may constitute an offence under the Computer Misuse Act 1990.\n\nIf you disclose any information obtained through this system without authority\nBT will take appropriate action against you. This may include legal\nproceedings, prosecution and disciplinary action up to and including\ndismissal.\n\n";
	    password minimum-length 8;
        class ro-group {
            idle-timeout 30;
            permissions view;
        }
        class su-group {
            idle-timeout 30;
            permissions all;
        }
        user read {
            full-name "Read-only fallback access user";
            uid 2001;
            class ro-group;
            authentication {
       			encrypted-password "$read_user_password$"
            }
        }
		user ro-user {
			full-name "TACACS+ authenticated read-only user";
			uid 2002;
			class ro-group;
		}
		user su-user {
	       full-name "TACACS+ authenticated superuser";
			uid 2003;
			class su-group;
		}
		user write {
	        full-name "Read/write fallback access user";
	        uid 2004;
	        class su-group;
	        authentication {
		    	encrypted-password "$write_user_password$"
            }
        }
    }
    time-zone UTC;
    commit synchronize;
    default-address-selection; 
	syslog {
		time-format year millisecond;
		console {
			any critical;
		}
		user * {
			any critical;
		}
		archive size 1m files 10;
		file messages {
			any info;  
			archive size 10m files 10 world-readable;
		}
		host other-routing-engine {
			any error;
			log-prefix other-RE;
		}
		host 172.30.155.131 {
			any notice;
			facility-override local7;
			log-prefix Juniper;
		}
	}
	internet-options {
		tcp-drop-synfin-set;
	}
}
snmp {
    location Amsterdam;
    contact "David Gethings <dgethings@juniper.net>";
    view QuebecROView {
        oid ifMIB include;
        oid jnxCos include;
        oid 1.3.6.1.2.1 include;

    }
    view novacm {
        oid internet include;
        oid internet.6.3.16 exclude;
    }
    view SmartsROView {
        oid 1.3.6.1.2.1 include;
        oid 1.3.6.1.3.96 include;
        oid 1.3.6.1.3.118 include;
    }
    view NOC_controlled_RO {
         oid internet include;
    }
    view CMMROView {
        oid 1.3.6.1.3.61 include;
        oid 1.3.6.1.2.1.83 include;
        oid 1.3.6.1.2.1.85 include;
        oid 1.3.6.1.2.1.2 include;
        oid 1.3.6.1.2.1.1.2 include;
        oid 1.3.6.1.2.1.1.3 include;
        oid 1.3.6.1.2.1.1.5 include;
        oid 1.3.6.1.2.1.1.1 include; 
 	}
    community new_ro_string {
        view QuebecROView;
        authorization read-only;
        clients {
			172.30.155.0/24;
	  	}
    }
    community Smarts_core_RO_string {
        view SmartsROView;
        authorization read-only;
        clients {
            172.30.155.0/24;
        }
    }
    community concord_ehealth_string {
        view NOC_controlled_RO;
        authorization read-only;
        clients {
            172.30.155.0/24;
        }
    }
    community CMM_RO_string {
        view CMMROView;
        authorization read-only;
        clients {
            172.30.155.0/24;
        }
    }
    community public {
        view novacm;
        authorization read-only;
        clients {
            172.30.155.0/24;
        }
    }
    trap-group p_router_snmp_group {
        version v1;
        categories {
            chassis;
            link;
            routing;
            startup;
            rmon-alarm;
            configuration;
            sonet-alarms;
        }
        targets {
            172.30.155.131;
            172.30.155.153;
        }
    }
    trap-group Smarts_core_RO_string {
        version v2;
  		categories {
            chassis;
            link;
            routing;
            startup;
            rmon-alarm; 
            configuration;
            sonet-alarms;
        }
        targets {
            172.30.155.131;
            172.30.155.153;
        }
    }
}
policy-options {
    prefix-list dns-addresses {
        /* comment for sub-net */
        apply-path "system name-server <*>";
    }
    prefix-list localhost {
        127.0.0.1/32;
    }  
    prefix-list ntp-addresses {
		172.30.155.131;
        apply-path "interfaces lo0 unit 0 family inet address <*>";
    }
    prefix-list snmp-addresses {
		172.30.155.0/24;
    }
    prefix-list tacacs-addresses {
        apply-path "system tacplus-server <*>";
    }
    prefix-list telnet-addresses {
        172.16.0.0/12
    }
    prefix-list ftp-addresses {
		172.16.0.0/12;
    }
}
firewall {
    policer dns-policer {
        if-exceeding {
            bandwidth-limit 500k;
            burst-size-limit 15k;
        }           
        then discard;
    }
    policer ntp-policer {
        if-exceeding {
            bandwidth-limit 250k;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer rsvp-policer {
        if-exceeding {
            bandwidth-limit 50k;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer small-bw-policer {
        if-exceeding {
            bandwidth-limit 500k;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer snmp-policer {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer tacacs-policer {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer telnet-policer {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 128k;
        }
        then discard;
    }
    policer tcp-connection-policer {
        if-exceeding {
            bandwidth-limit 50k;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer ftp-policer {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 15k;
        }
        then discard;
    }
    family inet {
        filter RSVP-rate-limit {
            term rsvp {
                from {
                    protocol rsvp;
                }
                then {
                    policer rsvp-policer;
                    accept;
                }
            }
            term match-all {
                then accept;
            }
        }
        filter protect-RE {
            term tcp-dos-protection {
                from {
                    protocol tcp;
                    tcp-flags "(syn & !ack) | fin | rst";
                }
                then {
                    policer tcp-connection-policer;
                    count tcp-syn;
                    next term;
                }
            }
            term telnet-in {
                from {
                    source-prefix-list {
                        telnet-addresses;
                    }
                    protocol tcp;
                    destination-port telnet ;
                }
                then {
                    policer telnet-policer;
                    accept;
                }
            }
            term telnet-out {
                from {
                    protocol tcp;
                    source-port telnet;
                    tcp-established;
                }
                then accept;
            }
            term ftp {
                from {
                    source-prefix-list {
                        ftp-addresses;
                    }
                    protocol tcp;
                    port [ ftp ftp-data ];
                }
                then {
                    policer ftp-policer;
                    count ftp;
                    accept;
                }
            }
            term ospf {
                from {
                    protocol ospf;
                }
                then {
                    count ospf-traffic;
                    accept;
                }
            }
            term ldp {
                from {
                    protocol [ tcp udp ];
                    port ldp;
                }
                then {
                    count ldp-traffic;
                    accept;
                }
            }
            term pim {
                from {
                    protocol pim;
                }
                then {
                    count pim-traffic;
                    accept;
                }
            }
            term rsvp {
                from {
                    protocol rsvp;
                }
                then {
                    count rsvp-traffic;
                    accept;
                }
            }
            term snmp {
                from {
                    source-prefix-list {
                        snmp-addresses;
                    }
                    protocol udp;
                    destination-port snmp;
                }
                then {
                    policer snmp-policer;
                    count snmp-count;
                    accept;
                }
            }
            term ntp {
                from {
                    source-prefix-list {
                        ntp-addresses;
                    }
                    protocol udp;
                    port ntp;
                }
                then {
                    policer ntp-policer;
                    count ntp;
                    accept;
                }
            }
            term dns {
                from {
                    source-prefix-list {
                        dns-addresses;
                    }
                    protocol udp;
                    source-port domain;
                }
                then {
                    policer dns-policer;
                    count dns;
                    accept;
                }
            }
            term tacacs {
                from {
                    source-prefix-list {
                        tacacs-addresses;
                    }
                    protocol tcp;
                    source-port tacacs;
                }
                then {
                    policer tacacs-policer;
                    count tacacs;
                    accept;
                }
            }
            term traceroute {
                from {
                    protocol udp;
                    destination-port 33434-33523;
                }
                then {
                    count traceroute-traffic;
                    accept;
                }
            }
            term icmp {
                from {
                    protocol icmp;
                    icmp-type [ echo-request echo-reply unreachable time-exceeded ];
                }
                then {
                    policer small-bw-policer;
                    count icmp-traffic;
                    accept;
                }
            }
            term bfd {
     		   from {
                    protocol udp;
                    port 3784-3785;
                }
                then {
					count bfd-count; 
		            accept;
			 	}
            }
            term discard-everything-else {
                then {
                    count deny-everything-else;
                    log;
                    discard;
                }
            }
        }
    }
}
interfaces {
	lo0 {
		unit 0 {
			family inet {
				filter {
					input protect-RE;
					output RSVP-rate-limit;
				}
			}
		}
	}
}
event-options {
    policy PIM-Neighbour-Changes {
        events [ rpd_pim_nbrdown rpd_pim_nbrup ];
        then {
            raise-trap;
        }
    }
    policy OSPF-LDP-Loss-of-Sychronisation {
        events rpd_ospf_ldp_sync;
        then {
            raise-trap;
        }
    }
    policy LDP-Adjacency-Changes {
        events [ rpd_ldp_nbrdown rpd_ldp_nbrup ];
        then {
            raise-trap;
        }
    }
}
routing-options {
	rib-groups {
        daf-red {
            import-rib [ red.inet.0 inet.0 ];
        }
        daf-blue {
            import-rib [ blue.inet.0 inet.0 ];
        }
    }
    forwarding-table {
        export load-balancing-policy;
    }
    multicast {
        ssm-groups 239.232.0.0/16;
    }
}
policy-options {
    policy-statement load-balancing-policy {
        then {
            load-balance per-packet;
        }
    }
}
forwarding-options {
    hash-key {
        family mpls {
            label-1;
            label-2;
			/*The no-label-1-exp applies only to M320 routers and is not needed on MX-960 */
            no-label-1-exp;
            payload {
                ip {
                  layer-3-only;
                }
            }
        }
    }
}
protocols {
    mpls {
        no-propagate-ttl;
		icmp-tunneling;
    }
    ospf {
        spf-options {
            delay 400;
            holddown 5000;
            rapid-runs 10;
        }
    }
	ldp {
        track-igp-metric;
        strict-targeted-hellos;
        egress-policy RED-BLUE-ACL1;
        deaggregate;
        keepalive-interval 60;
        keepalive-timeout 180;
        interface all;
        interface fxp0.0 {
            disable;
        }
        igp-synchronization holddown-interval 20;
    }
	pim {
		interface all {
			mode sparse;
			version 2;
		}
	}
}
class-of-service {
	forwarding-classes {
		class FC-Q0 queue-num 0;
		class FC-Q1 queue-num 1;
		class FC-Q2 queue-num 2;
		class FC-Q3 queue-num 3;
		class FC-EXP0-Q4 queue-num 4;
		class FC-Q4 queue-num 4;
		class FC-Q5 queue-num 5;
		class FC-Q6 queue-num 6;
		class FC-Q7 queue-num 7;
	}
	classifiers {
		exp BT_mpls_core_exp_ba_classifier {
			forwarding-class FC-Q5 {
				loss-priority low code-points 100;
			}
			forwarding-class FC-Q6 {
				loss-priority low code-points 110;
				loss-priority high code-points 010;
			}
			forwarding-class FC-Q4 {
				loss-priority low code-points 101;
				loss-priority high code-points [ 001 011 111 ];
			}
			forwarding-class FC-EXP0-Q4 {
				loss-priority high code-points 000;
			}
		}
		inet-precedence BT_mpls_core_prec_ba_classifier {
			forwarding-class FC-Q4 {
				loss-priority low code-points [ 000 101 111 ];
				loss-priority high code-points 001;
			}
			forwarding-class FC-Q7 {
				loss-priority low code-points 011;
			}
			forwarding-class FC-Q6 {
				loss-priority low code-points 110;
				loss-priority high code-points [ 010 100 ];
			}
		}
	}
	host-outbound-traffic {
		forwarding-class FC-Q3;
		dscp-code-point 110000;
	}
	drop-profiles {
		/* In-contract Chassis drop profile*/
	    general_in-contract_drop_profile {
	        interpolate {
	            fill-level [ 62 99 100 ];
	            drop-probability [ 0 10 100 ];
	        }
	    }
		/* Out-contract Chassis drop profile*/
	    general_out-contract_drop_profile {
	        interpolate {
	            fill-level [ 19 50 51 ];
	            drop-probability [ 0 20 100 ];
	        }
	    }
		/* In-contract interface drop profile, only two filling levels applies to IQ2 & DPC-Q*/
	    IQ2_general-in-contract_drop_profile {
	        fill-level 62 drop-probability 0;
	        fill-level 99 drop-probability 10;
	    }
		/* Out-contract interface drop profile, only two filling levels applies to IQ2 & DPC-Q*/
	    IQ2_general-out-contract_drop_profile {
	        fill-level 19 drop-probability 0;
	        fill-level 50 drop-probability 20;
	    }
	}
	rewrite-rules {
		exp BT_mpls_core_exp_rewrite {
			forwarding-class FC-Q4 {
				loss-priority low code-point 101;
				loss-priority high code-point 001;
			}
			forwarding-class FC-Q5 {
				loss-priority low code-point 100;
			}
			forwarding-class FC-Q6 {
				loss-priority low code-point 110;
				loss-priority high code-point 010;
			}
			forwarding-class FC-EXP0-Q4 {
				loss-priority high code-point 000;
			}
		}
	}
	schedulers {
		IQ2_Class1_scheduler {
			 transmit-rate percent 50 rate-limit;
			 priority high;
		}
		IQ2_Class2_scheduler {
			transmit-rate percent 29;
			buffer-size temporal 13900;
			priority low;
			drop-profile-map loss-priority low protocol any drop-profile general_in-contract_drop_profile;
			drop-profile-map loss-priority high protocol any drop-profile general_out-contract_drop_profile;
		}
		IQ2_Multicast_scheduler {
			transmit-rate percent 15;
			buffer-size temporal 19300;
			priority low;
			drop-profile-map loss-priority low protocol any drop-profile general_in-contract_drop_profile;
			drop-profile-map loss-priority high protocol any drop-profile general_out-contract_drop_profile;
		}
		IQ2_Default_scheduler {
			transmit-rate percent 3;
			buffer-size temporal 43k;
			priority low;
			drop-profile-map loss-priority low protocol any drop-profile general_in-contract_drop_profile;
			drop-profile-map loss-priority high protocol any drop-profile general_out-contract_drop_profile;
		}
		IQ2_core-cntrl {
			transmit-rate percent 3;
			buffer-size temporal 100000;
			priority low;
			drop-profile-map loss-priority low protocol any drop-profile general_in-contract_drop_profile;
			drop-profile-map loss-priority high protocol any drop-profile general_out-contract_drop_profile;
		}
	}
	scheduler-maps {
		IQ2_scheduler_map {
			forwarding-class FC-Q5 scheduler IQ2_Class1_scheduler;
			forwarding-class FC-Q6 scheduler IQ2_Class2_scheduler;
			forwarding-class FC-Q7 scheduler IQ2_Multicast_scheduler;
			forwarding-class FC-Q4 scheduler IQ2_Default_scheduler;
			forwarding-class FC-Q3 scheduler IQ2_core-cntrl;
		}
	}
}
